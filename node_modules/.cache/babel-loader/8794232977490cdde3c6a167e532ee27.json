{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Map() {\n  _s();\n\n  const [map, setMap] = useState([]);\n  const {\n    uuid\n  } = useParams();\n  useEffect(() => {\n    fetch('https://valorant-api.com/v1/maps/' + uuid).then(x => x.json()).then(res => setMap(res.data));\n\n    if (map.uuid !== uuid) {\n      navigate('/maps');\n    }\n  }, [uuid]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: uuid\n  }, void 0, false);\n}\n\n_s(Map, \"XuuKBNVrDn1Zi9drgZTOEbc3SNE=\", false, function () {\n  return [useParams];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["D:/Projets/react-valorant/src/routes/map.js"],"names":["React","useEffect","useState","useParams","Map","map","setMap","uuid","fetch","then","x","json","res","data","navigate"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAO,CAACC,GAAD,EAAKC,MAAL,IAAeJ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAWJ,SAAS,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,KAAK,CAAC,sCAAoCD,IAArC,CAAL,CAAgDE,IAAhD,CAAqDC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAA1D,EAAoEF,IAApE,CAAyEG,GAAG,IAAIN,MAAM,CAACM,GAAG,CAACC,IAAL,CAAtF;;AAEA,QAAIR,GAAG,CAACE,IAAJ,KAAaA,IAAjB,EAAuB;AACnBO,MAAAA,QAAQ,CAAC,OAAD,CAAR;AACH;AACJ,GANQ,EAMN,CAACP,IAAD,CANM,CAAT;AAQA,sBAAQ;AAAA,cACFA;AADE,mBAAR;AAIH;;GAhBQH,G;UAEYD,S;;;KAFZC,G;AAkBT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nfunction Map() {\r\n    const  [map,setMap] = useState([])\r\n    const { uuid } = useParams()\r\n\r\n    useEffect(() => {\r\n        fetch('https://valorant-api.com/v1/maps/'+uuid).then(x => x.json()).then(res => setMap(res.data))\r\n\r\n        if (map.uuid !== uuid) {\r\n            navigate('/maps')\r\n        }\r\n    }, [uuid])\r\n\r\n    return (<>\r\n        { uuid }\r\n\r\n    </>)\r\n}\r\n\r\nexport default Map"]},"metadata":{},"sourceType":"module"}